- name: Setup PostgreSQL repo
  include: postgresql-repo.yml

- name: Install system packages
  become: yes
  apt: pkg={{ item }} state=installed update_cache=yes
  with_items: "{{ system_packages }}"
      # Database
      # - postgresql-9.6
      # - postgresql-contrib-9.6
      # - libpq-dev
      # - python-psycopg2

      # Python Dev
      # - python3-dev
      # - python3-pip
      # - python-virtualenv
      # - zlib1g-dev

      # Data Libs
      # - python-numpy      
      #- six
      #- fiona
      #- geopandas
      #- shapely
      # - pyproj
      # - geopy
      # - rtree
      # - matplotlib
      # - descartes      
      # - pysal
      # - python-numpy 

# Install virtualenv, and virtualenvwrapper
- name: Install virtualenvwrapper
  become: yes
  become_method: sudo
  pip:
    name: virtualenvwrapper
    executable: pip3 

# Configure virtualenvwrapper
- name: Update bashrc for virtualenvwrapper
  lineinfile:
    dest=~/.bash_profile
    create=True
    insertafter=EOF
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
  with_items:
    - { line: "export VIRTUALENVWRAPPER_PYTHON={{ virtualenvwrapper_python }}", regexp: "^export VIRTUALENVWRAPPER_PYTHON="}  
    - { line: 'export WORKON_HOME=$HOME/.virtualenvs', regexp: '^export WORKON_HOME' }
    - { line: 'export PIP_VIRTUALENV_BASE=$WORKON_HOME', regexp: '^export PIP_VIRTUALENV_BASE='}
    - { line: 'export PIP_RESPECT_VIRTUALENV=true', regexp: '^export PIP_RESPECT_VIRTUALENV=true'}    
    - { line: 'source /usr/local/bin/virtualenvwrapper.sh', regexp: '^source /usr/local/bin/virtualenvwrapper.sh'}      
    - { line: 'mkvirtualenv {{ project }} --python={{ virtualenvwrapper_python }} --no-site-packages', regexp: 'mkvirtualenv {{ project }} --python={{ virtualenvwrapper_python }} --no-site-packages'}    
    - { line: 'workon {{ project }}', regexp: 'workon {{ project }}'}

# - name: Make virtualenv  
#   shell: "./usr/local/bin/virtualenvwrapper.sh && mkvirtualenv {{ project }} --python={{ virtualenvwrapper_python }} --no-site-packages"
#   args:
#    executable: /bin/bash
#    creates: "{{ virtualenvwrapper_home }}/{{ project }}"
#   register: mkvirtualenv   
#   environment:
#    path: /usr/local/bin:/usr/bin:/bin 

# - name: Activate {{ project }} virtual environment
#   shell: ". /usr/local/bin/virtualenvwrapper.sh && workon {{ project }}" 
#   args:
#    executable: /bin/bash
#   environment:
#    path: /usr/local/bin:/usr/bin:/bin   

- name: Install geodependencies with easy_install  
  become: yes
  become_method: sudo
  easy_install: 
    name: "{{ item }}"
  with_items: "{{ geodepencies_easyinstall }}"

- name: Install required Python packages.
  become: yes
  become_method: sudo
  pip: 
    name: "{{ item }}"
    executable: pip3
  with_items: "{{ python_packages }}"

- name: Allow password authentication for local socket users
  become: yes
  copy: src=pg_hba.conf dest=/etc/postgresql/9.6/main/pg_hba.conf force=yes
  notify:
      - Restart Postgres

- name: Create Database
  become: yes
  become_user: postgres
  postgresql_db: name={{ db_name }}

- name: Create User
  become: yes
  become_user: postgres
  postgresql_user: name={{ db_user }} password={{ db_password }} state=present role_attr_flags=SUPERUSER,CREATEDB

- name: Provide user with DB permissions
  become: yes
  become_user: postgres
  postgresql_user: user={{ db_user }} db={{ db_name }} priv=ALL      